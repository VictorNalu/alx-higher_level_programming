The ``2-matrix_divided`` module
============================

Using ``matrix_divided``
---------------------

Importing function from the module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test case 1: Valid matrix and divisor
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

# Test case 2: Matrix with negative numbers and divisor as float
    >>> matrix_divided([[-1, -2, -3], [-4, -5, -6]], 2.5)
    [[-0.4, -0.8, -1.2], [-1.6, -2.0, -2.4]]

# Test case 3: Empty matrix
    >>> matrix_divided([], 10)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test case 4: Divisor as zero
    >>> matrix_divided([[1, 2], [3, 4]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

# Test case 5: Matrix with rows of different sizes
    >>> matrix_divided([[1, 2, 3], [4, 5]], 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

# Test case 6: Divisor not a number
    >>> matrix_divided([[1, 2], [3, 4]], '2')
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

# Test case 7: Matrix elements not integers/floats
    >>> matrix_divided([[1, '2'], [3, 4]], 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
